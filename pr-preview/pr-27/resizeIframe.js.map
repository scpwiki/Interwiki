{
  "version": 3,
  "sources": ["../js/resizeIframe.js"],
  "sourcesContent": ["/**\n * Constructs and returns a function that, when called, resizes the current iframes to match its contents or the given height. The function is debounced.\n *\n * @param {String} site - The base URL of the site.\n * @param {String} frameId - The last segment of the URL of the interwiki iframe, used by Wikidot to identify it when resizing it.\n * @param {Number=} [debounceTime] - Debounce delay to stagger repeated calls to the resizer. Defaults to 750 ms.\n * @returns {((height: Number=) => void)} Debounced function that resizes the iframe. Optional height parameter sets the height of the iframe; if not set, the height is calculated from the document.\n */\nexport function createResizeIframe(site, frameId, debounceTime) {\n  if (debounceTime == null) debounceTime = 750;\n\n  var container = document.getElementById(\"resizer-container\");\n  if (container == null) {\n    container = document.createElement(\"div\");\n    container.id = \"resizer-container\";\n    document.body.appendChild(container);\n  }\n  var resizer = document.createElement(\"iframe\");\n  resizer.style.display = \"none\";\n  container.appendChild(resizer);\n\n  // Trim leading slashes from frame ID\n  frameId = frameId.replace(/^\\/+/, \"\");\n\n  var resize = function (height) {\n    if (height == null) {\n      // Measure from the top of the document to the iframe container to get the document height\n      // This takes into account inner margins, unlike e.g. document.body.clientHeight\n      // The container must not have display:none for this to work, which is why the iframe has it instead\n      height = container.getBoundingClientRect().top;\n      // Brute-force past any subpixel issues\n      if (height) height += 1;\n    }\n    var newResizerSrc =\n      site +\n      \"/common--javascript/resize-iframe.html?\" +\n      \"#\" +\n      height +\n      \"/\" +\n      frameId;\n    if (resizer.src !== newResizerSrc) {\n      resizer.src = \"about:blank\";\n      setTimeout(function () {\n        resizer.src = newResizerSrc;\n      }, 50);\n    }\n  };\n\n  return debounce(resize, debounceTime);\n}\n\n/**\n * Debounces a function, delaying its execution until a certain amount of time has passed since the last time it was called, and aggregating all calls made in that time into one.\n *\n * @param {Function} func - The function to call.\n * @param {Number} wait - The number of milliseconds to wait after any call to the debounced function before executing it.\n * @returns {Function} The debounced function.\n */\nexport function debounce(func, wait) {\n  var timeout = 0;\n  return function () {\n    var context = this;\n    var args = arguments;\n    clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      func.apply(context, args);\n    }, wait);\n  };\n}\n"],
  "mappings": "ghBAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,sCAAAE,GAAA,2BAAAC,KAQO,SAASD,EAAmBE,EAAMC,EAASC,EAAc,CAC1DA,GAAgB,OAAMA,EAAe,KAEzC,IAAIC,EAAY,SAAS,eAAe,mBAAmB,EACvDA,GAAa,OACfA,EAAY,SAAS,cAAc,KAAK,EACxCA,EAAU,GAAK,oBACf,SAAS,KAAK,YAAYA,CAAS,GAErC,IAAIC,EAAU,SAAS,cAAc,QAAQ,EAC7CA,EAAQ,MAAM,QAAU,OACxBD,EAAU,YAAYC,CAAO,EAG7BH,EAAUA,EAAQ,QAAQ,OAAQ,EAAE,EAEpC,IAAII,EAAS,SAAUC,EAAQ,CACzBA,GAAU,OAIZA,EAASH,EAAU,sBAAsB,EAAE,IAEvCG,IAAQA,GAAU,IAExB,IAAIC,EACFP,EACA,2CAEAM,EACA,IACAL,EACEG,EAAQ,MAAQG,IAClBH,EAAQ,IAAM,cACd,WAAW,UAAY,CACrBA,EAAQ,IAAMG,CAChB,EAAG,EAAE,EAET,EAEA,OAAOR,EAASM,EAAQH,CAAY,CACtC,CASO,SAASH,EAASS,EAAMC,EAAM,CACnC,IAAIC,EAAU,EACd,OAAO,UAAY,CACjB,IAAIC,EAAU,KACVC,EAAO,UACX,aAAaF,CAAO,EACpBA,EAAU,WAAW,UAAY,CAC/BF,EAAK,MAAMG,EAASC,CAAI,CAC1B,EAAGH,CAAI,CACT,CACF",
  "names": ["resizeIframe_exports", "__export", "createResizeIframe", "debounce", "site", "frameId", "debounceTime", "container", "resizer", "resize", "height", "newResizerSrc", "func", "wait", "timeout", "context", "args"]
}
